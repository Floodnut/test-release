name: Event Git Release

on:
  pull_request:
    branches: [main]
    types: [closed]


jobs:
  git-release:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'develop' && github.event.pull_request.merged == true
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: Check PR Merge
      id: check_merge
      if: github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'develop' && github.event.pull_request.merged == true
      run: |
        echo "PR from dev to main has been merged."
        echo "PR_TITLE=${{ github.event.pull_request.title }}" >> $GITHUB_ENV

    - name: Get PR Commits
      id: pr_commits
      run: |
        git fetch
        echo "COMMITS=$(git log --oneline ${{ github.event.before }}...${{ github.sha }})" >> $GITHUB_OUTPUT
        
    - name: Get Commit Message
      run: |
        echo ${{ steps.pr_commits.outputs.COMMITS }}
        MSG=$(git log --format=%B -n 1 ${{ github.event.after }})
        echo "Commit SHA: ${{github.event.after}}, commit message: $MSG"

    ## 병합 정보에서 버전 정보 추출
    - name: Parse version from Merged-PR
      id: release-tag
      run: echo "tag=$(echo '${{ github.event.pull_request.title }}' | egrep -o 'v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}[a-z]{0,2}')" >> $GITHUB_OUTPUT

    - name: Parse body from Merged-PR
      id: release-body
      run: |
        PR_CONTENT="${{ github.event.pull_request.body }}"

    ## 릴리즈 생성
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_FOR_CICD }}
      with:
        tag_name: ${{ steps.release-tag.outputs.tag }}
        release_name: ${{ steps.release-tag.outputs.tag }}
        body: |
          ${{ github.event.pull_request._links.commits.href }}
        draft: false
        prerelease: false
